{"ast":null,"code":"var _jsxFileName = \"/Users/samanthasimonds/Documents/React_Projects/SideEffectsProject/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useReducer, useContext } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../context/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\n// this is outside of the component bc it won't need any data\n// generated from w/in the component.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\n// its possible to refactor the email/password into one reducer but\n// they have different validation logic so its ok to have them separate\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n\n  // assign an alias to the extracted value\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      // since we rely on previous state, we want to useEffect w/ the special fx format\n      // useEffect guarantees the most updated state\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    // cleanup function runs before every new side effect function execution\n    // so that only 1 timer is ever running.(debouncing)\n    return () => {\n      clearTimeout(timer);\n    };\n    // we only want to rerun this when validity changes, not just everytime the input changes\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"HeaU0MNZnLSnvzzlHI3T3HPPJPY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useReducer","useContext","Card","classes","Button","AuthContext","Input","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailIsValid","passwordIsValid","timer","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","control","invalid","htmlFor","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["/Users/samanthasimonds/Documents/React_Projects/SideEffectsProject/src/components/Login/Login.js"],"sourcesContent":["import React, { useEffect, useState, useReducer, useContext } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../context/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\n// this is outside of the component bc it won't need any data\n// generated from w/in the component.\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\n// its possible to refactor the email/password into one reducer but\n// they have different validation logic so its ok to have them separate\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  // assign an alias to the extracted value\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      // since we rely on previous state, we want to useEffect w/ the special fx format\n      // useEffect guarantees the most updated state\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    // cleanup function runs before every new side effect function execution\n    // so that only 1 timer is ever running.(debouncing)\n    return () => {\n      clearTimeout(timer);\n    };\n    // we only want to rerun this when validity changes, not just everytime the input changes\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input />\n\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}